#!/usr/bin/env sos-runner
#fileformat=SOS1.0

parameter: theme = path('pm-template.latex')
parameter: notebook = path()
parameter: fontsize = "12pt"
parameter: papersize = "a4paper"
parameter: title = ""
parameter: date = ""
parameter: numbersections = 1
parameter: logo = path("logo.pdf")
# set to "--no-titlepage" to disable title page
parameter: titlepage = True
parameter: urlcolor = "cyan"
# set to "" to disable syntax highlight
parameter: highlight = "tango"
# set to "md" to try converting from plain markdown intermediate format
# if your document is indeed written as "md" file albeit inside Jupyter Notebook
parameter: via = "html"
fail_if(not notebook.is_file(), msg = 'Need input parameter ``--notebook``')

[ipynb_md: provides = '{data}.md']
output: f'{data}.md'
run: expand = True, stderr = False
     jupyter nbconvert {data}.ipynb --TemplateExporter.exclude_input=True --to markdown
python: expand = True
     text = open('{data}.md').read().strip()
     with open('{data}.md', 'w') as f:
          f.write(text)

[ipynb_html: provides = '{data}.html']
output: f'{data}.html'
run: expand = True, stderr = False
     jupyter nbconvert {data}.ipynb --TemplateExporter.exclude_input=True --to html --template basic
python: expand = True
     text = open('{data}.html').read()
     # FIXME: might be a better way to do these
     import re
     # change title
     if {len(title) > 0}:
          text = '<head><title>{title}</title></head>\n' + text
     # remove anchor
     text = re.sub(r'<a class="anchor-link"(.+?)182;</a>', '', text)
     # remove SoS hint
     text = re.sub(r'<div class="sos_hint">(.+?)</div>', '', text)
     with open('{data}.html', 'w') as f:
          f.write(text)

# see https://jdhao.github.io/2017/12/10/pandoc-markdown-with-chinese/
[default]
depends: executable('pandoc')
input: f'{notebook:an}.{via}', theme
output: f'{notebook:an}.pdf'
bash: container = "gaow/debian-texlive", expand = True, volumes = [f'{_input[0]:d}:{_input[0]:d}', f'{_input[1]:ad}:{_input[1]:ad}'], workdir = f'{_input[0]:d}'
     echo "Convertion in progress ... please stay tuned :)"
     pandoc --toc -N --smart -f html+tex_math_dollars+tex_math_single_backslash --latex-engine=xelatex --template={_input[1]:an} {"--highlight-style" if highlight else ""} {highlight} -V urlcolor={urlcolor} -V fontsize={fontsize} -V papersize={papersize} -V titlepage={'titlepage' if titlepage else notitlepage} {"-V date='%s'" % date if date else ""} {"-V logo='%s'" % logo.resolve() if logo.is_file() else ""} -V numbersections={numbersections} -o {_output} {_input[0]} && rm -f {_input[0]}
